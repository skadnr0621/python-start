# 001-010

🎁 출력문 print()의 옵션

1. sep(separation)
구분자. 분리해서 출력하는 기능을 하며, 분리할 문자를 지정할 수 있다.
ex) print('a','b','c',sep='@')
>>> a@b@c

2. end
뒤에 출력될 내용과 이어서 출력한다. == 줄바꿈을 하지 않는다. 
한줄에 print()를 여러개 나열하면 줄바꿈하고 출력을 해주는데, end=""사용시 이어서 출력한다. end =""에서 ""사이에 문자를 넣어주면 그 문자는 구분자 sep의 역할을 수행한다.
ex) print('a');print('a');print('a')
>>>a
   a
   a
ex) print('a', end="");print('a', end="");print('a', end="")
>>>aaa
  
3. format
문자열이 본래 출력 기능말고 다른 특정한 기능을 하게 해준다.
포매팅을 통해 특정 서식을 따라 문자를 출력한다. 숫자를 사용하는 방법과, %기호를 사용하는 방법이 있다. 

숫자를 사용하는 경우, format을 통해 삽입할 부분을 순서에 맞게 {0},{1},{2}...로 넣어주고, .format(값1,값2,값3) 으로 채워주면 순서에 따라 알아서 삽입된다. 
ex) print("{0}월{1}일".format(10,31))
>>>10월31일

%를 사용하는 경우, 출력문 부분에 삽입될 형식(%s, %d, %f..)을 지정하고 뒤에 %(값1,값2,값3)으로 채워주면 순서와 형식에 맞게 삽입된다. 출력문과 %(값)사이에 ,가 들어가지 않는다. 
ex) print("%s %d잔 주세요." %("커피",1))
>>>커피 1잔 주세요.

4. escape
  특수한 경우 탈출할 수 있도록 도와주는 문자들
  \n : 줄바꿈
  \\ : \
  \' : '
  \" : "
  \b : backspace
  \t : tab

  ✔ ;는 한 줄에 여러 문장을 사용할 때 각 문장의 끝을 말해준다.
  ✔ print("","") 와 같이 ,(쉼표)로 구분하면 출력 시 구분자로 공백한칸이 들어간다.
  ✔ 문자열에 곱하기 사용한 경우 문자열이 곱한 수만큼 출력된다.
  ✔ 한줄주석 #
  ✔  블록주석 '''내용''', """내용"""
